# DO NOT EDIT THIS FILE! This file is auto-generated by ci/bootstrap.py
# Instead, edit setup.cfg or one of the templates inside of ci/templates/
# Finally, run `python ci/bootstrap.py` to regenerate this file

# https://github.com/ionelmc/python-nameless/blob/test-matrix-separate-cext/ci/templates/tox.ini

# BSD 2-Clause License

# Copyright (c) 2019, Ionel Cristian Mărieș. All rights reserved.

# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

#    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
#    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


[tox]
envlist =
    clean,
    check,
    py27-cover,
    py27-nocov,
    py35-cover,
    py35-nocov,
    py36-cover,
    py36-nocov,
    py37-cover,
    py37-nocov,
    py38-cover,
    py38-nocov,
    pypy-cover,
    pypy-nocov,
    pypy3-cover,
    pypy3-nocov,
    report

[testenv]
basepython =
    {bootstrap,clean,check,report,codecov,coveralls,extension-coveralls}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    pytest
    pytest-travis-fold
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest -vv --ignore=src}

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py --no-env

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 moviepy tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py


[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls --merge=extension-coveralls.json []


[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []


[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:py27-cover]
basepython = {env:TOXPYTHON:python2.7}
setenv =
    {[testenv]setenv}
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py27-nocov]
basepython = {env:TOXPYTHON:python2.7}

[testenv:py35-cover]
basepython = {env:TOXPYTHON:python3.5}
setenv =
    {[testenv]setenv}
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py35-nocov]
basepython = {env:TOXPYTHON:python3.5}

[testenv:py36-cover]
basepython = {env:TOXPYTHON:python3.6}
setenv =
    {[testenv]setenv}
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py36-nocov]
basepython = {env:TOXPYTHON:python3.6}

[testenv:py37-cover]
basepython = {env:TOXPYTHON:python3.7}
setenv =
    {[testenv]setenv}
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py37-nocov]
basepython = {env:TOXPYTHON:python3.7}

[testenv:py38-cover]
basepython = {env:TOXPYTHON:python3.8}
setenv =
    {[testenv]setenv}
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py38-nocov]
basepython = {env:TOXPYTHON:python3.8}

[testenv:pypy-cover]
basepython = {env:TOXPYTHON:pypy}
setenv =
    {[testenv]setenv}
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:pypy-nocov]
basepython = {env:TOXPYTHON:pypy}

[testenv:pypy3-cover]
basepython = {env:TOXPYTHON:pypy3}
setenv =
    {[testenv]setenv}
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:pypy3-nocov]
basepython = {env:TOXPYTHON:pypy3}
